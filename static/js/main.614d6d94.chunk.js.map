{"version":3,"sources":["components/Header/Header.jsx","components/SearchBox/SearchBox.jsx","components/Scroll/Scroll.jsx","components/Card/Card.jsx","components/CardList/CardList.jsx","components/ErrorBoundary/ErrorBoundry.jsx","components/App/App.jsx","index.js"],"names":["Header","className","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","children","Card","state","color","changeColor","setState","this","id","name","email","cardClasses","cn","onClick","src","alt","React","Component","CardList","robots","cardsArray","map","user","i","key","uniqueId","ErrorBoundry","hasError","error","info","App","onSearchChange","e","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","Fragment","mountNode","document","getElementById","ReactDOM","render"],"mappings":"0VASeA,G,MANA,WACX,OACI,wBAAIC,UAAU,SAAd,iBCUOC,G,MAZG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,yBAAKH,UAAU,cACX,2BACIA,UAAU,eACVI,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCXI,G,MARA,SAACC,GACd,OACE,yBAAKR,UAAU,UACZQ,EAAMC,Y,gBCwBEC,G,kNAzBXC,MAAQ,CACJC,OAAO,G,EAEXC,YAAc,WACV,EAAKC,UAAS,kBAAgB,CAACF,OAAjB,EAAGA,W,uDAGX,IAAD,EACuBG,KAAKP,MAAzBQ,EADH,EACGA,GAAIC,EADP,EACOA,KAAMC,EADb,EACaA,MACZC,EAAcC,IAAG,OAAQ,CAAC,MAASL,KAAKJ,MAAMC,QACpD,OACI,yBAAKZ,UAAWmB,EAAaE,QAASN,KAAKF,aACvC,6BACI,yBAAKS,IAAG,+BAA0BN,EAA1B,iBAA6CO,IAAI,WAG7D,6BACI,wBAAIvB,UAAU,cAAciB,GAC5B,uBAAGjB,UAAU,aAAakB,S,GAnB3BM,IAAMC,Y,eCcVC,EAbE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAaD,EAAOE,KAAI,SAACC,EAAMC,GACjC,OACA,kBAAC,EAAD,CAAMC,IAAKC,qBAAYjB,GAAIW,EAAOI,GAAGf,GAAIC,KAAMU,EAAOI,GAAGd,KAAMC,MAAOS,EAAOI,GAAGb,WAGpF,OACI,yBAAKlB,UAAU,aACV4B,ICGEM,E,4MAbbvB,MAAQ,CACNwB,UAAU,G,gEAEMC,EAAOC,GACvBtB,KAAKD,SAAS,CAAEqB,UAAU,M,+BAG1B,OAAIpB,KAAKJ,MAAMwB,SACN,wBAAInC,UAAU,SAAd,kCAEFe,KAAKP,MAAMC,a,GAXKe,IAAMC,WCwClBa,E,4MAlCX3B,MAAQ,CACJgB,OAAQ,GACRzB,YAAa,I,EAEjBqC,eAAiB,SAACC,GACd,EAAK1B,SAAS,CAAEZ,YAAasC,EAAEC,OAAOC,S,kEAErB,IAAD,OAChBC,MAAM,8CACLC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKjC,SAAS,CAAEa,OAAQoB,S,+BAEnC,IAAD,EAC2BhC,KAAKJ,MAA7BgB,EADH,EACGA,OAAQzB,EADX,EACWA,YACV8C,EAAiBrB,EAAOsB,QAAO,SAACC,GAClC,OAAOA,EAAMjC,KAAKkC,cACAC,SAASlD,EAAYiD,kBAE3C,OAAKxB,EAAO0B,OAIR,kBAAC,IAAMC,SAAP,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWnD,aAAcY,KAAKwB,iBAC9B,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUZ,OAAQqB,OARvB,wBAAIhD,UAAU,SAAd,e,GApBDyB,aCAZ8B,EAAYC,SAASC,eAAe,QAC1CC,IAASC,OAAO,kBAAC,EAAD,MAASJ,K","file":"static/js/main.614d6d94.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h1 className=\"title\">RoboFriends</h1>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './searchbox.css';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return (\r\n        <div className=\"search-box\">\r\n            <input \r\n                className=\"search-input\"\r\n                type=\"search\" \r\n                placeholder=\"search robots\" \r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    )\r\n};\r\nexport default SearchBox;","import React from 'react';\r\nimport './scroll.css';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div className=\"scroll\">\r\n      {props.children}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport cn from 'classnames';\r\nimport './card.css';\r\n\r\nclass Card extends React.Component {\r\n    state = {\r\n        color: false,\r\n    };\r\n    changeColor = () => {\r\n        this.setState(({ color }) => ({color: !color}));\r\n    }\r\n    \r\n    render() {\r\n        const { id, name, email } = this.props;\r\n        const cardClasses = cn('card', {'color': this.state.color});\r\n        return (\r\n            <div className={cardClasses} onClick={this.changeColor}>\r\n                <div>\r\n                    <img src={`https://robohash.org/${id}?size=100x100`} alt=\"robot\">\r\n                    </img>\r\n                </div>\r\n                <div>\r\n                    <h2 className=\"card-title\">{name}</h2>\r\n                    <p className=\"card-text\">{email}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../Card/Card';\r\nimport './cardlist.css';\r\nimport { uniqueId } from 'lodash';\r\n\r\nconst CardList = ({ robots }) => {\r\n    const cardsArray = robots.map((user, i) => {\r\n        return (\r\n        <Card key={uniqueId()} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n        )\r\n    });\r\n    return (\r\n        <div className=\"card-list\">\r\n            {cardsArray}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nclass ErrorBoundry extends React.Component {\r\n  state = {\r\n    hasError: false,\r\n  }\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true })\r\n  }\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1 className=\"title\">'oooops, something goes wrong'</h1>\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport Header from '../Header/Header';\r\nimport SearchBox from '../SearchBox/SearchBox';\r\nimport Scroll from '../Scroll/Scroll';\r\nimport CardList from '../CardList/CardList';\r\nimport ErrorBoundry from '../ErrorBoundary/ErrorBoundry';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        robots: [],\r\n        searchfield: '',\r\n    }\r\n    onSearchChange = (e) => {\r\n        this.setState({ searchfield: e.target.value })\r\n    }\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then((response) => response.json())\r\n        .then((users) => this.setState({ robots: users }))\r\n    }\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter((robot) => {\r\n            return robot.name.toLowerCase()\r\n                             .includes(searchfield.toLowerCase());\r\n        })\r\n        if (!robots.length) {\r\n            return <h1 className=\"title\">LOADING</h1>\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots={filteredRobots}/>\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'normalize.css';\r\nimport './style.css';\r\n\r\nimport App from './components/App/App';\r\n\r\nconst mountNode = document.getElementById('root');\r\nReactDOM.render(<App />, mountNode);\r\n\r\n"],"sourceRoot":""}