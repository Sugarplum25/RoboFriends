{"version":3,"sources":["components/Header/Header.jsx","components/SearchBox/SearchBox.jsx","components/Scroll/Scroll.jsx","components/Card/Card.jsx","components/CardList/CardList.jsx","components/ErrorBoundary/ErrorBoundry.jsx","components/App/App.jsx","index.js"],"names":["Header","className","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","children","Card","id","name","email","useState","color","setColor","cardClasses","cn","onClick","src","alt","CardList","robots","cardsArray","map","user","i","key","uniqueId","ErrorBoundry","state","hasError","error","info","this","setState","React","Component","App","setRobots","setSearchField","useEffect","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","Fragment","e","target","value","mountNode","document","getElementById","ReactDOM","render"],"mappings":"sUASeA,G,MANA,WACX,OACI,wBAAIC,UAAU,SAAd,iBCUOC,G,MAZG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,yBAAKH,UAAU,cACX,2BACIA,UAAU,eACVI,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCXI,G,MARA,SAACC,GACd,OACE,yBAAKR,UAAU,UACZQ,EAAMC,Y,gBCiBEC,G,MAlBF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAAW,EACNC,oBAAS,GADH,mBACzBC,EADyB,KAClBC,EADkB,KAE1BC,EAAcC,IAAG,OAAQ,CAACH,UAEhC,OACI,yBAAKf,UAAWiB,EAAaE,QAFb,kBAAMH,GAAUD,KAGhC,6BACI,yBAAKK,IAAG,+BAA0BT,EAA1B,iBAA6CU,IAAI,WAG7D,6BACI,wBAAIrB,UAAU,cAAcY,GAC5B,uBAAGZ,UAAU,aAAaa,O,eCCvBS,EAbE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAaD,EAAOE,KAAI,SAACC,EAAMC,GACjC,OACA,kBAAC,EAAD,CAAMC,IAAKC,qBAAYlB,GAAIY,EAAOI,GAAGhB,GAAIC,KAAMW,EAAOI,GAAGf,KAAMC,MAAOU,EAAOI,GAAGd,WAGpF,OACI,yBAAKb,UAAU,aACVwB,I,4BCGEM,E,4MAbbC,MAAQ,CACNC,UAAU,G,gEAEMC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAG1B,OAAIG,KAAKJ,MAAMC,SACN,wBAAIhC,UAAU,SAAd,kCAEFmC,KAAK3B,MAAMC,a,GAXK4B,IAAMC,WCkClBC,EA7BH,WAAO,IAAD,EACczB,mBAAS,IADvB,mBACPS,EADO,KACCiB,EADD,OAEwB1B,mBAAS,IAFjC,mBAEPZ,EAFO,KAEMuC,EAFN,KAMdC,qBAAU,WACNC,MAAM,8CACDC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAWP,EAAUO,QAChC,IACH,IAAMC,EAAiBzB,EAAO0B,QAAO,SAACC,GAClC,OAAOA,EAAMtC,KAAKuC,cAAcC,SAASlD,EAAYiD,kBAEzD,OAAK5B,EAAO8B,OAIR,kBAAC,IAAMC,SAAP,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWnD,aAjBI,SAACoD,GACpBd,EAAec,EAAEC,OAAOC,UAiBpB,kBAAC,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUlC,OAAQyB,OARvB,wBAAIhD,UAAU,SAAd,YCfT0D,EAAYC,SAASC,eAAe,QAC1CC,IAASC,OAAO,kBAAC,EAAD,MAASJ,K","file":"static/js/main.cc854668.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h1 className=\"title\">RoboFriends</h1>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './searchbox.css';\r\n\r\nconst SearchBox = ({ searchField, searchChange }) => {\r\n    return (\r\n        <div className=\"search-box\">\r\n            <input \r\n                className=\"search-input\"\r\n                type=\"search\" \r\n                placeholder=\"search robots\"\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    )\r\n};\r\nexport default SearchBox;","import React from 'react';\r\nimport './scroll.css';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div className=\"scroll\">\r\n      {props.children}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Scroll;","import React, { useState } from 'react';\r\nimport cn from 'classnames';\r\nimport './card.css';\r\n\r\n\r\nconst Card = ({id, name, email}) => {\r\n    const [color, setColor] = useState(false);\r\n    const cardClasses = cn('card', {color});\r\n    const changeColor = () => setColor(!color);\r\n    return (\r\n        <div className={cardClasses} onClick={changeColor}>\r\n        <div>\r\n            <img src={`https://robohash.org/${id}?size=100x100`} alt=\"robot\">\r\n            </img>\r\n        </div>\r\n        <div>\r\n            <h2 className=\"card-title\">{name}</h2>\r\n            <p className=\"card-text\">{email}</p>\r\n        </div>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../Card/Card';\r\nimport './cardlist.css';\r\nimport { uniqueId } from 'lodash';\r\n\r\nconst CardList = ({ robots }) => {\r\n    const cardsArray = robots.map((user, i) => {\r\n        return (\r\n        <Card key={uniqueId()} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n        )\r\n    });\r\n    return (\r\n        <div className=\"card-list\">\r\n            {cardsArray}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nclass ErrorBoundry extends React.Component {\r\n  state = {\r\n    hasError: false,\r\n  }\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true })\r\n  }\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1 className=\"title\">'oooops, something goes wrong'</h1>\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\nexport default ErrorBoundry;","import React, { useState, useEffect } from 'react';\r\nimport Header from '../Header/Header';\r\nimport SearchBox from '../SearchBox/SearchBox';\r\nimport Scroll from '../Scroll/Scroll';\r\nimport CardList from '../CardList/CardList';\r\nimport ErrorBoundry from '../ErrorBoundary/ErrorBoundry';\r\n\r\nconst App = () => {\r\n    const [robots, setRobots] = useState([]);\r\n    const [searchField, setSearchField] = useState('');\r\n    const onSearchChange = (e) => {\r\n        setSearchField(e.target.value);\r\n    };\r\n    useEffect(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then((response) => response.json())\r\n            .then((users) => setRobots(users))\r\n    }, []);\r\n    const filteredRobots = robots.filter((robot) => {\r\n        return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    });\r\n    if (!robots.length) {\r\n        return <h1 className=\"title\">LOADING</h1>\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Header />\r\n            <SearchBox searchChange={onSearchChange}/>\r\n            <Scroll>\r\n                <ErrorBoundry>\r\n                    <CardList robots={filteredRobots}/>\r\n                </ErrorBoundry>\r\n            </Scroll>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'normalize.css';\r\nimport './style.css';\r\n\r\nimport App from './components/App/App';\r\n\r\nconst mountNode = document.getElementById('root');\r\nReactDOM.render(<App />, mountNode);\r\n\r\n"],"sourceRoot":""}